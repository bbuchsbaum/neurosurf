% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neighborhood.R
\name{find_all_neighbors}
\alias{find_all_neighbors}
\title{Find Node Neighbors in a Surface Mesh}
\usage{
find_all_neighbors(
  surf,
  radius,
  edgeWeights,
  nodes = NULL,
  distance_type = c("euclidean", "geodesic", "spherical")
)
}
\arguments{
\item{surf}{A SurfaceGeometry object or igraph object representing the mesh}

\item{radius}{Numeric; the spatial radius within which to search for neighbors}

\item{edgeWeights}{Numeric vector; weights for edges used in distance computation}

\item{nodes}{Integer vector; subset of nodes to find neighbors for. If NULL, uses all nodes}

\item{distance_type}{Character; type of distance metric to use: "euclidean", "geodesic", or "spherical"}
}
\value{
A list of matrices, each containing neighbor information:
  \item{i}{Source node index}
  \item{j}{Neighbor node index}
  \item{d}{Distance between nodes}
}
\description{
Identifies all neighboring nodes within a specified radius for a given surface mesh.
}
\details{
The function supports three distance metrics: Euclidean, geodesic, and spherical.
For spherical distances, the surface is assumed to be a sphere.
}
\examples{
\dontrun{
surf <- readSurfaceGeometry("path/to/surface.gii")
edge_weights <- rep(1, length(E(graph(surf))))
neighbors <- find_all_neighbors(surf, radius = 10, edgeWeights = edge_weights)
}

}
