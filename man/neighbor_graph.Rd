% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generic.R, R/neighborhood.R
\name{neighbor_graph}
\alias{neighbor_graph}
\alias{neighbor_graph,SurfaceGeometry,numeric,missing,missing-method}
\alias{neighbor_graph,igraph,numeric,missing,missing}
\alias{neighbor_graph,SurfaceGeometry,numeric,numeric,missing-method}
\alias{neighbor_graph,igraph,numeric,numeric,missing}
\alias{neighbor_graph,SurfaceGeometry,numeric,numeric,integer-method}
\alias{neighbor_graph,igraph,numeric,numeric,integer}
\alias{neighbor_graph,SurfaceGeometry,numeric,missing,integer-method}
\alias{neighbor_graph,igraph,numeric,missing,integer}
\title{Construct Neighborhood Graph from Surface Mesh}
\usage{
neighbor_graph(x, radius, edgeWeights, nodes, ...)

\S4method{neighbor_graph}{SurfaceGeometry,numeric,missing,missing}(
  x,
  radius,
  distance_type = c("geodesic", "euclidean", "spherical")
)

\S4method{neighbor_graph}{SurfaceGeometry,numeric,numeric,missing}(
  x,
  radius,
  edgeWeights,
  distance_type = c("geodesic", "euclidean", "spherical")
)

\S4method{neighbor_graph}{SurfaceGeometry,numeric,numeric,integer}(
  x,
  radius,
  edgeWeights,
  nodes,
  distance_type = c("geodesic", "euclidean", "spherical")
)

\S4method{neighbor_graph}{SurfaceGeometry,numeric,missing,integer}(
  x,
  radius,
  nodes,
  distance_type = c("geodesic", "euclidean", "spherical")
)
}
\arguments{
\item{x}{An object representing a surface mesh. The specific class depends on the method implementation.}

\item{radius}{Numeric. The edge radius defining the neighborhood extent.}

\item{edgeWeights}{Numeric vector. Custom weights for edges, used to define edge distances.}

\item{nodes}{Integer vector. The subset of nodes to use in graph construction. If NULL, all nodes are used.}

\item{...}{Additional arguments passed to methods.}
}
\value{
An object representing the constructed neighborhood graph. The specific class depends on the method implementation.
}
\description{
This generic function constructs a neighborhood graph from a surface mesh using edge weights.
It allows for flexible definition of neighborhoods based on edge radius and custom edge weights.
}
\details{
The neighborhood graph is constructed by considering edges within the specified radius
and applying the provided edge weights. This function is particularly useful in
neuroimaging analyses for defining local connectivity on brain surfaces.
}
\examples{
\dontrun{
# Assuming 'surface_mesh' is a pre-defined surface mesh object
graph <- neighbor_graph(surface_mesh, radius = 5, 
                        edgeWeights = runif(nrow(surface_mesh$vertices)),
                        nodes = 1:1000)
}

}
\seealso{
\code{\link{graph}}, \code{\link{vertices}}
}
